// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: user.sql

package database

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const changeEmail = `-- name: ChangeEmail :exec
UPDATE users SET email=$1 WHERE uuid=$1
`

func (q *Queries) ChangeEmail(ctx context.Context, email pgtype.Text) error {
	_, err := q.db.Exec(ctx, changeEmail, email)
	return err
}

const changePassword = `-- name: ChangePassword :exec
UPDATE users SET password_hash=$1 WHERE uuid=$1
`

func (q *Queries) ChangePassword(ctx context.Context, passwordHash pgtype.Text) error {
	_, err := q.db.Exec(ctx, changePassword, passwordHash)
	return err
}

const changeUsername = `-- name: ChangeUsername :exec
UPDATE users SET username=$1 WHERE uuid=$1
`

func (q *Queries) ChangeUsername(ctx context.Context, username pgtype.Text) error {
	_, err := q.db.Exec(ctx, changeUsername, username)
	return err
}

const createUser = `-- name: CreateUser :one
INSERT INTO users(username, email, password_hash) VALUES ($1, $2, $3)
RETURNING id, uuid, username, email, password_hash
`

type CreateUserParams struct {
	Username     pgtype.Text `json:"username"`
	Email        pgtype.Text `json:"email"`
	PasswordHash pgtype.Text `json:"password_hash"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser, arg.Username, arg.Email, arg.PasswordHash)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Uuid,
		&i.Username,
		&i.Email,
		&i.PasswordHash,
	)
	return i, err
}

const deleteUser = `-- name: DeleteUser :exec
DELETE FROM users WHERE uuid=$1
`

func (q *Queries) DeleteUser(ctx context.Context, argUuid uuid.UUID) error {
	_, err := q.db.Exec(ctx, deleteUser, argUuid)
	return err
}

const getUser = `-- name: GetUser :one
SELECT id, uuid, username, email, password_hash FROM users WHERE uuid=$1
`

func (q *Queries) GetUser(ctx context.Context, argUuid uuid.UUID) (User, error) {
	row := q.db.QueryRow(ctx, getUser, argUuid)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Uuid,
		&i.Username,
		&i.Email,
		&i.PasswordHash,
	)
	return i, err
}
